<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/jee 
           http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/xllib4" />
		<property name="user" value="root" />
		<property name="password" value="sd-9898w" />
		<property name="minPoolSize" value="10" />                    <!--连接池中保留的最小连接数。 -->
		<property name="maxPoolSize" value="30" />                   <!--连接池中保留的最大连接数。 Default: 15 -->
		<property name="initialPoolSize" value="10" />               <!--初始化时获取的连接数，取值应在 minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="maxIdleTime" value="60" />                   <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="acquireIncrement" value="5" />               <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="maxStatements" value="0" />					<!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。如果maxStatements与 maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />      <!--每60秒检查所有连接池中的空闲连接。 Default: 0 -->
		<property name="acquireRetryAttempts" value="30" />          <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="breakAfterAcquireFailure" value="false" />	<!-- 获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
		<property name="testConnectionOnCheckout" value="false" />	<!-- 因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable等方法来提升连接测试的性能。Default: false -->
	</bean>
    <!-- 从tomcat获取数据源java:comp/env/ 
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/xunlei" resource-ref="true" />
	-->
	<!-- common libfun常用业务逻辑 -->
	<context:component-scan base-package="com.xunlei.libfun" use-default-filters="false">
   		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
   		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
    </context:component-scan>
	<!-- 业务逻辑支撑bean -->
	<context:component-scan base-package="com.xunlei.common">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
	</context:component-scan>
	
    <!-- cms业务逻辑 -->
    <context:component-scan base-package="com.xunlei.cms" use-default-filters="false">
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    <context:component-scan base-package="com.xunlei.cms" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
	</context:component-scan>
	
	 <!-- 利用aop进行权限控制 自动扫描了注解了切面的类 默认采用java动态代理，proxy-target-class="true"采用CGLIB-->
	<aop:aspectj-autoproxy proxy-target-class="true" />
</beans>